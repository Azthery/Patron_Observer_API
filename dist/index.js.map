{"version":3,"sources":["src/observe.ts","src/fetch_bitcoin.ts","src/index.ts"],"names":[],"mappings":";AAmDa,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,WAAA,QAAA,gBAAA,EAnDb,IAAM,EAAQ,EACR,EAAY,SAAS,cAAc,gBAYzC,EAAA,WAEI,SAAA,IADA,KAAA,aAAe,GAmCnB,OAhCI,EAAA,UAAA,OAAA,SAAO,GACE,KAAA,aAAa,EAAE,IAAM,GAE9B,EAAA,UAAA,OAAA,SAAO,GACG,IAAA,EAAQ,KAAK,aAAa,QAAQ,GACxC,QAAQ,IAAI,GACZ,QAAQ,IAAI,GACZ,QAAQ,IAAI,KAAK,cAEZ,KAAA,aAAa,OAAO,EAAO,GAEhC,EAAU,UAAY,GAClB,IAAA,IAAI,EAAI,EAAG,EAAI,KAAK,aAAa,OAAQ,IACP,UAA/B,EAAO,KAAK,aAAa,MACxB,EAAU,WAAa,KAAK,aAAa,GAAG,MAGpD,QAAQ,IAAI,KAAK,eAErB,EAAA,UAAA,OAAA,SAAO,GACE,KAAA,aAAa,QAAQ,SAAA,GAAM,OAAA,EAAG,OAAO,MAE9C,EAAA,UAAA,QAAA,SAAQ,GACC,KAAA,aAAa,QAAQ,SAAA,GAAM,OAAA,EAAG,QAAQ,MAE/C,EAAA,UAAA,MAAA,WACI,EAAU,UAAY,GACjB,KAAA,aAAe,IAExB,EAAA,UAAA,YAAA,SAAY,GACR,EAAU,WAAa,KAAK,aAAa,GAAI,MAErD,EApCA,GAAa,QAAA,WAAA,EAsCb,IAAA,EAAA,WAGI,SAAA,EAAY,EAAI,GACP,KAAA,KAAO,EACP,KAAA,GAAK,EACL,KAAA,QAAU,EACV,KAAA,KACL,uBAAuB,KAAK,GAAE,wIAGd,KAAK,GAAE,kDACY,KAAK,GAAE,0IAGb,KAAK,KAAI,2FAEgB,KAAK,GAAE,2BAC/C,KAAK,QAAQ,KAAI,IAAI,KAAK,QAAQ,OAAM,yCAc9D,OAVI,EAAA,UAAA,OAAA,SAAO,GACA,EAAK,KAAK,MAAM,MAAQ,KAAK,QAAQ,MAC/B,KAAA,QAAQ,IAGrB,EAAA,UAAA,QAAA,SAAQ,GACC,KAAA,QAAU,EAAK,KAAK,MACzB,SAAS,cAAc,UAAU,KAAK,IACrC,UAAe,KAAK,QAAQ,KAAI,IAAI,KAAK,QAAQ,QAE1D,EAhCA,GAAa,QAAA,WAAA;;ACtBb,aAAA,SAAgB,EAAQ,GACpB,MAAM,GACL,KAAK,SAAA,GAAY,OAAA,EAAS,SAC1B,KAAK,SAAA,GAAQ,OAAA,QAAA,SAAW,IACxB,MAAM,SAAA,GAAO,OAAA,QAAQ,MAAM,KAJhC,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IA7BA,QAAA,QAAA,QAAA,YAAA,QAAA,cAAA,EACW,QAAA,SAAe,CACd,IAAA,CAAU,KAAA,EAAW,IAAA,EAAY,KAAA,EAAc,OAAA,KAC/C,IAAA,CAAU,KAAA,EAAW,IAAA,EAAY,KAAA,EAAc,OAAA,KAC/C,IAAA,CAAU,KAAA,EAAW,IAAA,EAAY,KAAA,EAAc,OAAA,MAC/C,IAAA,CAAU,KAAA,EAAW,IAAA,EAAY,KAAA,EAAc,OAAA,KAC/C,IAAA,CAAU,KAAA,EAAW,IAAA,EAAY,KAAA,EAAc,OAAA,OAC/C,IAAA,CAAU,KAAA,EAAW,IAAA,EAAY,KAAA,EAAc,OAAA,KAC/C,IAAA,CAAU,KAAA,EAAW,IAAA,EAAY,KAAA,EAAc,OAAA,KAC/C,IAAA,CAAU,KAAA,EAAW,IAAA,EAAY,KAAA,EAAc,OAAA,MAC/C,IAAA,CAAU,KAAA,EAAW,IAAA,EAAY,KAAA,EAAc,OAAA,KAC/C,IAAA,CAAU,KAAA,EAAW,IAAA,EAAY,KAAA,EAAc,OAAA,KAC/C,IAAA,CAAU,KAAA,EAAW,IAAA,EAAY,KAAA,EAAc,OAAA,KAC/C,IAAA,CAAU,KAAA,EAAW,IAAA,EAAY,KAAA,EAAc,OAAA,KAC/C,IAAA,CAAU,KAAA,EAAW,IAAA,EAAY,KAAA,EAAc,OAAA,MAC/C,IAAA,CAAU,KAAA,EAAW,IAAA,EAAY,KAAA,EAAc,OAAA,KAC/C,IAAA,CAAU,KAAA,EAAW,IAAA,EAAY,KAAA,EAAc,OAAA,KAC/C,IAAA,CAAU,KAAA,EAAW,IAAA,EAAY,KAAA,EAAc,OAAA,KAC/C,IAAA,CAAU,KAAA,EAAW,IAAA,EAAY,KAAA,EAAc,OAAA,MAC/C,IAAA,CAAU,KAAA,EAAW,IAAA,EAAY,KAAA,EAAc,OAAA,OAC/C,IAAA,CAAU,KAAA,EAAW,IAAA,EAAY,KAAA,EAAc,OAAA,MAC/C,IAAA,CAAU,KAAA,EAAW,IAAA,EAAY,KAAA,EAAc,OAAA,KAC/C,IAAA,CAAU,KAAA,EAAW,IAAA,EAAY,KAAA,EAAc,OAAA,KAC/C,IAAA,CAAU,KAAA,EAAW,IAAA,EAAY,KAAA,EAAc,OAAA,KAC/C,IAAA,CAAU,KAAA,EAAW,IAAA,EAAY,KAAA,EAAc,OAAA,QAG9C,QAAA,YAAc,iCAE3B,QAAA,QAAA;;AC0CC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAvED,IAAA,EAAA,QAAA,aACA,EAAA,QAAA,mBAMI,EAAK,EACL,EAAwB,SAAS,cAAc,eACnD,EAAe,EAAa,MAC5B,QAAQ,IAAI,GAEZ,IAAI,EAAe,CACf,KAAK,GACL,MAAM,GAEN,EAAQ,IAAI,EAAA,WAkBhB,SAAS,IACiB,SAAS,iBAAiB,gBAClC,QAAQ,SAAC,GACnB,EAAG,iBAAiB,QAAS,WACzB,QAAQ,IAAI,MAAM,EAAG,IACf,IAAA,EAAU,SAAS,cAAc,eAAe,EAAG,IACzD,QAAQ,IAAI,GACZ,EAAM,OAAO,EAAM,aAAa,EAAG,KACnC,EAAM,QAAQ,EAAA,UACd,QAOX,SAAS,EAAe,QAAA,IAAA,IAAA,EAAA,KAErB,GADA,EAAe,SAAS,eAAe,eACX,MAC5B,EAAA,QAAQ,EAAA,aACR,EAAM,OAAO,EAAA,UACb,EAAgB,GAEhB,WAAW,WAAK,OAAA,KAAkB,GAGtC,SAAS,EAAgB,GAClB,EAAa,MAAQ,IACpB,EAAa,KAAO,EACpB,SAAS,cAAc,mBAClB,UAAY,cAAc,GAEhC,EAAa,OAAS,EAAA,SAAS,GAAc,OAC5C,EAAa,MAAQ,EAAA,SAAS,GAAc,KAC5C,SAAS,cAAc,mBAClB,UAAe,EAAA,SAAS,GAAc,KAAI,IAAI,EAAA,SAAS,GAAc,QAnDlF,SAAS,cAAc,YAClB,iBAAiB,QAAS,WACb,IAAA,EAAU,IAAI,EAAA,WAAW,GAAG,EAAM,GACxC,EAAM,OAAO,GACb,EAAM,YAAY,GAClB,EAAM,OAAO,EAAA,UACb,IACA,MAGZ,SAAS,cAAc,cAClB,iBAAiB,QAAS,WACvB,EAAM,QACN,EAAK,IAiBb","file":"index.js","sourceRoot":"../src","sourcesContent":["const numEl = 1;\nconst container = document.querySelector('#subscritors')\n\ninterface Observable{\n    attach(o: Observer):any;\n    detach(o: Observer):any;\n    notify(data:any):any;\n}\ninterface Observer{\n    id: any;\n    update(data:any):any;\n}\n\nexport class Observador implements Observable{\n    suscriptores = [];\n    constructor(){\n    }\n    attach(o: Observer){\n        this.suscriptores[o.id] = o;\n    }\n    detach(o){\n        const index = this.suscriptores.indexOf(o);\n        console.log(index)\n        console.log(o)\n        console.log(this.suscriptores)\n\n        this.suscriptores.splice(index, numEl);\n        \n        container.innerHTML = '';\n        for(let i = 0; i < this.suscriptores.length; i++){\n            if(typeof this.suscriptores[i] == 'object'){\n                container.innerHTML += this.suscriptores[i].html;\n            }\n        }\n        console.log(this.suscriptores)\n    }\n    notify(data:any){\n        this.suscriptores.forEach(el => el.update(data));\n    }\n    reflesh(data:any){\n        this.suscriptores.forEach(el => el.display(data));\n    }\n    clear(){\n        container.innerHTML = '';\n        this.suscriptores = [];\n    }\n    displaySubs(id){\n        container.innerHTML += this.suscriptores[id].html\n    }\n}\n\nexport class Suscriptor implements Observer{\n    private bitcoin: any;\n    private html:string; id:any; coin: any;\n    constructor(id, coin){\n        this.coin = coin\n        this.id = id;\n        this.bitcoin = 0;\n        this.html = \n        `<div id=\"suscriptor-${this.id}\" class='subscritor font'>\n            <div class=\"subscritor--head flex\">\n                </img src=''>\n                <p>ID:${this.id}</p>\n                <input type=\"button\" id=\"${this.id}\" class=\"button-subs\" value=\"x\">\n            </div>\n                <p class=\"subscritor--text\">\n                    One bitcoin in ${this.coin} is:\n                </p>\n                <p class=\"subscritor--value flex\" id=\"value-${this.id}\">\n                    ${this.bitcoin.last} ${this.bitcoin.symbol}\n                </p>\n        </div>`\n    }\n    update(data:any){\n        if(data[this.coin].last != this.bitcoin.last){\n            this.display(data);\n        }\n    }\n    display(data:any){\n        this.bitcoin = data[this.coin];\n        document.querySelector(`#value-${this.id}`)\n        .innerHTML = `${this.bitcoin.last} ${this.bitcoin.symbol}`\n    }\n}","//Creamos una carcasa del objecto bitcoin\nexport let bitcoins:any = {\n    \"USD\" : {\"last\" : 0, \"buy\" : 0, \"sell\" : 0, \"symbol\" : \"$\"},\n    \"AUD\" : {\"last\" : 0, \"buy\" : 0, \"sell\" : 0, \"symbol\" : \"$\"},\n    \"BRL\" : {\"last\" : 0, \"buy\" : 0, \"sell\" : 0, \"symbol\" : \"R$\"},\n    \"CAD\" : {\"last\" : 0, \"buy\" : 0, \"sell\" : 0, \"symbol\" : \"$\"},\n    \"CHF\" : {\"last\" : 0, \"buy\" : 0, \"sell\" : 0, \"symbol\" : \"CHF\"},\n    \"CLP\" : {\"last\" : 0, \"buy\" : 0, \"sell\" : 0, \"symbol\" : \"$\"},\n    \"CNY\" : {\"last\" : 0, \"buy\" : 0, \"sell\" : 0, \"symbol\" : \"¥\"},\n    \"DKK\" : {\"last\" : 0, \"buy\" : 0, \"sell\" : 0, \"symbol\" : \"kr\"},\n    \"EUR\" : {\"last\" : 0, \"buy\" : 0, \"sell\" : 0, \"symbol\" : \"€\"},\n    \"GBP\" : {\"last\" : 0, \"buy\" : 0, \"sell\" : 0, \"symbol\" : \"£\"},\n    \"HKD\" : {\"last\" : 0, \"buy\" : 0, \"sell\" : 0, \"symbol\" : \"$\"},\n    \"INR\" : {\"last\" : 0, \"buy\" : 0, \"sell\" : 0, \"symbol\" : \"₹\"},\n    \"ISK\" : {\"last\" : 0, \"buy\" : 0, \"sell\" : 0, \"symbol\" : \"kr\"},\n    \"JPY\" : {\"last\" : 0, \"buy\" : 0, \"sell\" : 0, \"symbol\" : \"¥\"},\n    \"KRW\" : {\"last\" : 0, \"buy\" : 0, \"sell\" : 0, \"symbol\" : \"₩\"},\n    \"NZD\" : {\"last\" : 0, \"buy\" : 0, \"sell\" : 0, \"symbol\" : \"$\"},\n    \"PLN\" : {\"last\" : 0, \"buy\" : 0, \"sell\" : 0, \"symbol\" : \"zł\"},\n    \"RUB\" : {\"last\" : 0, \"buy\" : 0, \"sell\" : 0, \"symbol\" : \"RUB\"},\n    \"SEK\" : {\"last\" : 0, \"buy\" : 0, \"sell\" : 0, \"symbol\" : \"kr\"},\n    \"SGD\" : {\"last\" : 0, \"buy\" : 0, \"sell\" : 0, \"symbol\" : \"$\"},\n    \"THB\" : {\"last\" : 0, \"buy\" : 0, \"sell\" : 0, \"symbol\" : \"฿\"},\n    \"TRY\" : {\"last\" : 0, \"buy\" : 0, \"sell\" : 0, \"symbol\" : \"₺\"},\n    \"TWD\" : {\"last\" : 0, \"buy\" : 0, \"sell\" : 0, \"symbol\" : \"NT$\"}\n  }\n\nexport const URL_Bitcoin = 'https://blockchain.info/ticker';\n//consulta el valor del bitcoin\nexport function callApi(url:string){\n    fetch(url)\n    .then(response => response.json())\n    .then(data => bitcoins = data)\n    .catch(err => console.error(err))\n}","import {Observador, Suscriptor} from './observe';\nimport {bitcoins, URL_Bitcoin, callApi} from './fetch_bitcoin'\n\ninterface Selector extends HTMLElement{\n    value?: any;\n}\n\nlet id = 0; \nlet coinSelector:Selector = document.querySelector('#selectCoin')\ncoinSelector = coinSelector.value;\nconsole.log(coinSelector)\n\nlet cacheExample = {\n    coin:'',\n    value:0\n}\nlet coins = new Observador();\n\ndocument.querySelector('#addSubs')\n    .addEventListener('click', ()=>{\n            const newSubs = new Suscriptor(`${id}`, coinSelector)\n            coins.attach(newSubs);\n            coins.displaySubs(id);\n            coins.notify(bitcoins);\n            id++;\n            buttonUnsubscribe();\n\n    })\ndocument.querySelector('#clearSubs')\n    .addEventListener('click', ()=> {\n        coins.clear()\n        id = 0;\n    });\n\nfunction buttonUnsubscribe(){\n    const buttonsUnsubs = document.querySelectorAll('.button-subs')\n    buttonsUnsubs.forEach((el:any) => {\n        el.addEventListener('click', () => {\n            console.log(`ID:${el.id}`)\n            const element = document.querySelector(`#suscriptor-${el.id}`)\n            console.log(element)\n            coins.detach(coins.suscriptores[el.id])\n            coins.reflesh(bitcoins);\n            buttonUnsubscribe();\n        })\n    })\n}\n\nrequestBitcoin()\n//consulta el valor del bitcoins cada x segundos\n function requestBitcoin(timeRequest = 1000){\n    coinSelector = document.getElementById('selectCoin')  //update value\n    coinSelector = coinSelector.value\n    callApi(URL_Bitcoin);\n    coins.notify(bitcoins);\n    displayExampler(coinSelector);\n\n    setTimeout(()=> requestBitcoin(), timeRequest)\n}\n\nfunction displayExampler(coinSelector){\n    if(cacheExample.coin != coinSelector){\n        cacheExample.coin = coinSelector\n        document.querySelector('#example--title')\n            .innerHTML = `Bitcoin to ${coinSelector}`;\n    }\n    if(cacheExample.value != bitcoins[coinSelector].last){\n        cacheExample.value = bitcoins[coinSelector].last\n        document.querySelector('#example--value')\n            .innerHTML = `${bitcoins[coinSelector].last} ${bitcoins[coinSelector].symbol}`;\n    }\n}"]}